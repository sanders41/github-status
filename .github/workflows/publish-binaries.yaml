on:
  release:
    types:
    - published

name: Publish binaries to release

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: github-status
            asset_name: github-status-linux-amd64
          - os: macos-latest
            artifact_name: github-status
            asset_name: github-status-macos-amd64

    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --release --locked
      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          file: target/release/${{ matrix.artifact_name }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN}}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}

  publish-armv8:
    name: Publish for ARMv8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        id: runcmd
        with:
          architecture: aarch64 # aka ARMv8
          distribution: ubuntu@latest
          run: |
            apt update
            apt install -y curl gcc make
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable
            source $HOME/.cargo/env
            cargo build --release --locked
      - name: Upload the binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN}}
          file: target/release/{{ matrix.artifact_name }}
          asset_name: github-status-linux-armv8
          tag: ${{ github.ref }}
